{"ast":null,"code":"// src/components/ProtectedRoute.tsx\nimport React from'react';import{Navigate}from'react-router-dom';import{useAuthState}from'react-firebase-hooks/auth';import{auth}from'../firebaseConfig';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{component:Component}=_ref;const[user,loading]=useAuthState(auth);if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}return user?/*#__PURE__*/_jsx(Component,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useAuthState","auth","jsx","_jsx","ProtectedRoute","_ref","component","Component","user","loading","children","to"],"sources":["/Users/remisu/gajyun-portal/client/src/components/ProtectedRoute.tsx"],"sourcesContent":["// src/components/ProtectedRoute.tsx\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from '../firebaseConfig';\n\ninterface ProtectedRouteProps {\n  component: React.ComponentType<any>;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ component: Component }) => {\n  const [user, loading] = useAuthState(auth);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return user ? <Component /> : <Navigate to=\"/login\" />;\n};\n\nexport default ProtectedRoute;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,YAAY,KAAQ,2BAA2B,CACxD,OAASC,IAAI,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAMzC,KAAM,CAAAC,cAA6C,CAAGC,IAAA,EAA8B,IAA7B,CAAEC,SAAS,CAAEC,SAAU,CAAC,CAAAF,IAAA,CAC7E,KAAM,CAACG,IAAI,CAAEC,OAAO,CAAC,CAAGT,YAAY,CAACC,IAAI,CAAC,CAE1C,GAAIQ,OAAO,CAAE,CACX,mBAAON,IAAA,QAAAO,QAAA,CAAK,YAAU,CAAK,CAAC,CAC9B,CAEA,MAAO,CAAAF,IAAI,cAAGL,IAAA,CAACI,SAAS,GAAE,CAAC,cAAGJ,IAAA,CAACJ,QAAQ,EAACY,EAAE,CAAC,QAAQ,CAAE,CAAC,CACxD,CAAC,CAED,cAAe,CAAAP,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}